.TH "Common::Iterators::TSafeDoublyLinkedIterator< NdPtrType, ValRefType >" 3 "Tue Jun 1 2021" "Version 1.1" "CommonLibs" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Common::Iterators::TSafeDoublyLinkedIterator< NdPtrType, ValRefType >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'CommonTypes/Iterators/DoublyLinked\&.h'\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTSafeDoublyLinkedIterator\fP ()"
.br
.ti -1c
.RI "\fBTSafeDoublyLinkedIterator\fP (NdPtrType InitialPosition)"
.br
.ti -1c
.RI "const \fBTSafeDoublyLinkedIterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBTSafeDoublyLinkedIterator\fP \fBoperator+\fP (size_t Offset)"
.br
.ti -1c
.RI "const \fBTSafeDoublyLinkedIterator\fP & \fBoperator+=\fP (size_t Offset)"
.br
.ti -1c
.RI "const \fBTSafeDoublyLinkedIterator\fP & \fBoperator\-\-\fP ()"
.br
.ti -1c
.RI "\fBTSafeDoublyLinkedIterator\fP \fBoperator\-\fP (size_t Offset)"
.br
.ti -1c
.RI "const \fBTSafeDoublyLinkedIterator\fP & \fBoperator\-=\fP (size_t Offset)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBTSafeDoublyLinkedIterator\fP &Other)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBTSafeDoublyLinkedIterator\fP &Other)"
.br
.ti -1c
.RI "ValRefType \fBoperator*\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "NdPtrType \fBNodePointer\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename NdPtrType , typename ValRefType > \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::\fBTSafeDoublyLinkedIterator\fP ()"

.SS "template<typename NdPtrType , typename ValRefType > \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::\fBTSafeDoublyLinkedIterator\fP (NdPtrType InitialPosition)"

.SH "Member Function Documentation"
.PP 
.SS "template<typename NdPtrType , typename ValRefType > const \fBTSafeDoublyLinkedIterator\fP& \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::operator++ ()"

.SS "template<typename NdPtrType , typename ValRefType > \fBTSafeDoublyLinkedIterator\fP \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::operator+ (size_t Offset)"

.SS "template<typename NdPtrType , typename ValRefType > const \fBTSafeDoublyLinkedIterator\fP& \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::operator+= (size_t Offset)"

.SS "template<typename NdPtrType , typename ValRefType > const \fBTSafeDoublyLinkedIterator\fP& \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::operator\-\- ()"

.SS "template<typename NdPtrType , typename ValRefType > \fBTSafeDoublyLinkedIterator\fP \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::operator\- (size_t Offset)"

.SS "template<typename NdPtrType , typename ValRefType > const \fBTSafeDoublyLinkedIterator\fP& \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::operator\-= (size_t Offset)"

.SS "template<typename NdPtrType , typename ValRefType > bool \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::operator== (const \fBTSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType > & Other)"

.SS "template<typename NdPtrType , typename ValRefType > bool \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::operator!= (const \fBTSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType > & Other)"

.SS "template<typename NdPtrType , typename ValRefType > ValRefType \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::operator* ()"

.SH "Member Data Documentation"
.PP 
.SS "template<typename NdPtrType , typename ValRefType > NdPtrType \fBCommon::Iterators::TSafeDoublyLinkedIterator\fP< NdPtrType, ValRefType >::NodePointer"


.SH "Author"
.PP 
Generated automatically by Doxygen for CommonLibs from the source code\&.
